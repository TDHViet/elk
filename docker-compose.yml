version: '3.7'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: bind
        source: ./elasticsearch/config/ca.crt
        target: /usr/share/elasticsearch/config/ca.crt
        read_only: true
      - type: bind
        source: ./elasticsearch/config/node.crt
        target: /usr/share/elasticsearch/config/node.crt
        read_only: true
      - type: bind
        source: ./elasticsearch/config/node.key
        target: /usr/share/elasticsearch/config/node.key
        read_only: true
      - type: bind
        source: ./elasticsearch/config/ca.key
        target: /usr/share/elasticsearch/config/ca.key
        read_only: true
      - type: bind
        source: ./elasticsearch/config/node.csr
        target: /usr/share/elasticsearch/config/node.csr
        read_only: true
      - ./elasticsearch/index-template.json:/etc/filebeat/index-template.json

    ports:
      - "9200:9200"
    environment:
      - ELASTIC_PASSWORD=changeme
    restart: always
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: bind
        source: ./elasticsearch/config/ca.crt
        target: /usr/share/logstash/config/certs/ca.crt
        read_only: true
      - type: bind
        source: ./elasticsearch/config/ca.key
        target: /usr/share/logstash/config/certs/ca.key
        read_only: true
      - type: bind
        source: ./elasticsearch/config/node.key
        target: /usr/share/logstash/config/certs/node.key
        read_only: true
      - type: bind
        source: ./elasticsearch/config/node.crt
        target: /usr/share/logstash/config/certs/node.crt
        read_only: true
    ports:
      - "5000:5000"
      - "9600:9600"
    expose: 
      - "5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
      - type: bind
        source: ./elasticsearch/config/ca.crt
        target: /usr/share/kibana/config/ca.crt
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

  app:
    build : ./app
    volumes:
      - ./app/:/usr/src/app
      - /usr/src/app/node_modules/ # make node_module empty in container
    command: npm start
    ports:
      - "3000:3000"
    networks:
      - elk

  nginx:
    build: ./nginx
    volumes:
      - ./nginx/config:/etc/nginx/conf.d
      - ./nginx/log:/var/log/nginx
    ports:
      - "80:80"
      # - "443:443"
    links:
      - app:app
    depends_on: 
      - app
    networks:
      - elk

  filebeat:
    build: ./filebeat
    entrypoint: "filebeat -e -strict.perms=false"
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./nginx/log:/var/log/nginx
    networks:
      - elk
    depends_on: 
      - app
      - nginx
      - logstash
      - elasticsearch
      - kibana
    links: 
      - logstash

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
    driver: local
